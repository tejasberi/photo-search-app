{"version":3,"sources":["API/api.js","components/image.js","components/gallery.js","components/searchBox.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","API_KEY","process","getImages","a","fetch","headers","Authorization","res","json","data","error","searchImages","search","queryParams","results","image","imageDetails","src","urls","small","width","id","Gallery","images","className","options","isFitWidth","map","searchBox","setSearch","type","value","placeholder","minLength","debounceTimeout","onChange","e","target","App","useState","setImages","loading","setLoading","setError","getImageData","handleData","searchImageData","useEffect","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9a3d97e.chunk.js","sourcesContent":["const baseURL = \"https://api.unsplash.com/\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const getImages = async () => {\n  const queryParams = \"photos?per_page=30\";\n\n  try {\n    const res = await fetch(`${baseURL}/${queryParams}`, {\n      headers: {\n        Authorization: `Client-ID ${API_KEY}`,\n      },\n    });\n    return {\n      data: await res.json(),\n      error: null,\n    };\n  } catch (e) {\n    return { data: null, error: e };\n  }\n};\n\nexport const searchImages = async (search) => {\n  const queryParams = `search/photos?per_page=30&query=${search}`;\n\n  try {\n    const res = await fetch(`${baseURL}/${queryParams}`, {\n      headers: {\n        Authorization: `Client-ID ${API_KEY}`,\n      },\n    });\n    const data = await res.json();\n    return {\n      data: data.results,\n      error: null,\n    };\n  } catch (e) {\n    return { data: null, error: e };\n  }\n};\n","import React from \"react\";\n\nconst image = ({ imageDetails }) => {\n  return (\n    <li key={imageDetails.id}>\n      <img src={imageDetails.urls.small} width=\"400\" key={imageDetails.id} />\n    </li>\n  );\n};\n\nexport default image;\n","import Image from \"./image\";\nimport Masonry from \"react-masonry-component\";\nimport React from \"react\";\n\nconst Gallery = ({ images }) => {\n  return (\n    <div>\n      <Masonry className=\"grid-container\" options={{ isFitWidth: true }}>\n        {images.map((image) => {\n          return <Image imageDetails={image} />;\n        })}\n      </Masonry>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import { DebounceInput } from \"react-debounce-input\";\nimport React from \"react\";\n\nconst searchBox = ({ search, setSearch }) => {\n  return (\n    <div className=\"search-container\">\n      <DebounceInput\n        type=\"text\"\n        value={search}\n        placeholder=\"Search for photo\"\n        minLength={2}\n        debounceTimeout={500}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default searchBox;\n","import React, { useEffect, useState } from \"react\";\nimport { getImages, searchImages } from \"./API/api\";\n\nimport Gallery from \"./components/gallery\";\nimport SearchBox from \"./components/searchBox\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getImageData = async () => {\n    const { data, error } = await getImages();\n    handleData(data, error);\n  };\n\n  const searchImageData = async (search) => {\n    const { data, error } = await searchImages(search);\n    handleData(data, error);\n  };\n\n  const handleData = (data, error) => {\n    setLoading(true);\n    if (data) {\n      setImages(data);\n    } else if (error) {\n      setError(error);\n    }\n    setLoading(false);\n  };\n\n  // get images using hooks\n  useEffect(async () => {\n    if (search.length > 0) {\n      searchImageData(search);\n    } else {\n      getImageData();\n    }\n  }, [search]);\n\n  return (\n    <center>\n      <h1>Photo Search App</h1>\n      <SearchBox search={search} setSearch={setSearch} />\n      <div className=\"photo-container\">\n        {loading ? (\n          <p>Loading</p>\n        ) : error ? (\n          <p>Error loading data</p>\n        ) : images.length > 0 ? (\n          <Gallery images={images} />\n        ) : (\n          <p>No photos found</p>\n        )}\n      </div>\n    </center>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}